#include "buildscripts/MSVCCompilers.bff"

.VsBasePath = '$Vs14BasePath$'
.WindowsSDKBasePath = "$Vs14BasePath$/../Windows Kits"


//------------------------------------------------------------------------------
// Configurations
//------------------------------------------------------------------------------
.MSVCBaseConfig =
[
  .AdditionalWarnings    = ' /we4062' // enumerator 'identifier' in a switch of enum 'enumeration' is not handled
              + ' /we4263' // 'function' : member function does not override any base class virtual member function
              + ' /we4265' // 'class': class has virtual functions, but destructor is not virtual
              + ' /we4296' // 'operator': expression is always false
              + ' /we4555' // expression has no effect; expected expression with side-effect
              + ' /we4619' // #pragma warning : there is no warning number 'number'
              + ' /we4640' // 'instance' : construction of local static object is not thread-safe
              + ' /we4826' // Conversion from 'type1 ' to 'type_2' is sign-extended. This may cause unexpected runtime behavior.
              + ' /we4836' // nonstandard extension used : 'type' : local types or unnamed types cannot be used as template arguments
              + ' /we4905' // wide string literal cast to 'LPSTR'
              + ' /we4906' // string literal cast to 'LPWSTR'

  .CompilerOptions     = '"%1" /GS /MP /FS /TP /W3 /Zi /EHsc /nologo /WX- /c'
              + ' /Zc:inline'      // Remove unreferenced COMDATs at compile time (VS2013.2+)
              + ' /Zc:strictStrings'  // Require const only usage of string literals (VS2013+)
              + .AdditionalWarnings
              + ' /fp:fast'
              + ' /D"WIN32_LEAN_AND_MEAN" /D_WIN32 /D__WINDOWS__'
              + ' /D"_CRT_SECURE_NO_WARNINGS"' // don't warn about unsafe functions
                            + ' /D"_WINSOCK_DEPRECATED_NO_WARNINGS"' // don't warn about deprecated winsock functions - TODO:C Update API use
  .PCHOptions        = .CompilerOptions
              + ' /Fp"%2" /Fo"%3"'
  .CompilerOptions    + ' /Fo"%2"'
  .LibrarianOptions    = ' /NOLOGO /OUT:"%2" "%1"'
  .LinkerOptions      = ' /NOLOGO /INCREMENTAL:YES /OUT:"%2" "%1" /DEBUG'

  // Optimizations
  .CompilerDebugOptimizations    = ' /MTd /RTC1 /Od /Ob0 /Gm- '
  .CompilerReleaseOptimizations  = ' /MT /Ox /Oy /Oi /GS- /GF /GL /Gy /Gw /GR- /analyze'
  .LibrarianDebugOptimizations  = ''
  .LibrarianReleaseOptimizations  = ' /LTCG'
  .LinkerDebugOptimizations    = ''
  .LinkerReleaseOptimizations    = ' /LTCG /OPT:REF,ICF'

  .BaseIncludePaths    = ' /I"./"'
              + ' /I"$VsBasePath$/VC/include/"'
              + ' /I"$VsBasePath$/VC/atlmfc/include"'
              + ' /I"$WindowsSDKBasePath$/10/Include/10.0.10240.0/ucrt"'
              + ' /I"$WindowsSDKBasePath$/10/Include/10.0.10240.0/ucrt/include/um"'
              + ' /I"$WindowsSDKBasePath$/8.1/Include/um"'
              + ' /I"$WindowsSDKBasePath$/8.1/Include/shared"'
  .CompilerOptions    + .BaseIncludePaths
  .PCHOptions        + .BaseIncludePaths


]

#import PYTHON_API

.X64BaseConfig=
[
  Using(.MSVCBaseConfig)
  .ToolsBasePath = '$VsBasePath$/VC/bin/amd64'
  .Compiler = 'MSVC14-x64'
  .Librarian = '$ToolsBasePath$/lib.exe'
  .Linker = '$ToolsBasePath$/link.exe'
  .CompilerOptions + ' /DWIN64'
  .PCHOptions + ' /DWIN64'
  .LinkerOptions + ' /MACHINE:X64'
  .Platform = 'x64'
  .LinkerOptions + ' /LIBPATH:"$VsBasePath$/VC/lib/amd64"'
                 + ' /LIBPATH:"$PYTHON_API$/libs/"'
                 + ' /LIBPATH:"$WindowsSDKBasePath$/10/lib/10.0.10240.0/um/x64/"'
                 + ' /LIBPATH:"$WindowsSDKBasePath$/10/lib/10.0.10240.0/ucrt/x64/"'
]

.X64DebugConfig =
[
	Using( .X64BaseConfig )
	.Config					= 'Debug'
	.CompilerOptions		+ ' /DDEBUG /DPROFILING_ENABLED'
							+ .CompilerDebugOptimizations
	.PCHOptions				+ ' /DDEBUG /DPROFILING_ENABLED'
							+ .CompilerDebugOptimizations
	.LibrarianOptions		+ .LibrarianDebugOptimizations
	.LinkerOptions			+ .LinkerDebugOptimizations
]

{
  .UnityInputPath="PyBindUnit/src/"
  .UnityOutputPath= 'workspace/Unity/'

  Unity("PyBindUnitUnity")
  {
    .UnityInputExcludedFiles="PyBindUnit.cpp"
    .UnityOutputPath + "PyBindUnitUnity/"
  }
}

ObjectList("PyBindUnitLib")
{
  Using(.X64DebugConfig)
  .CompilerOptions + ' /I"PyBindUnit/inc/"'
                   + ' /I"PyBind/inc/"'
                   + ' /I"$PYTHON_API$/include/"'
  .CompilerInputUnity = {"PyBindUnitUnity"}
  .CompilerInputFiles="PyBindUnit/src/PyBindUnit.cpp"
  .LibrarianOutput = "lib/PyBindUnit.lib"
  .CompilerOutputPath = "workspace/Intermediate/"
}

Executable("PyBindUnit")
{
  Using(.X64BaseConfig)
  .CompilerInputPath = "PyBindUnit/src/"
  .Libraries = {"PyBindUnitLib"}
  .LinkerOutput = "bin/PyBindUnit.exe"
  .LinkerOptions				+ ' /SUBSYSTEM:CONSOLE'
}
